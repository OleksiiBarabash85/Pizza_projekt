{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tel-ran.de\\\\Desktop\\\\pizza_project\\\\pizza-project\\\\src\\\\Camponents\\\\PizzaForms\\\\PizzaForm.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSauce, getBasic, getExtra } from \"../../Redux/Features/AdminReqests/ingredientReqestsSlice\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PizzaForm() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm();\n  const [sauceOptions, setSauceOptions] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    sauceDataState,\n    extraDataState,\n    basicDataState\n  } = useSelector(state => state.ingredientReqest);\n  const sauceList = sauceDataState;\n  const extraList = extraDataState;\n  const basicList = basicDataState;\n  useEffect(() => {\n    dispatch(getSauce());\n    dispatch(getBasic());\n    dispatch(getExtra());\n  }, []);\n  const submit = data => {\n    console.log(data);\n  };\n  const handleChange = selected => {\n    setSauceOptions(selected.slice(0, 3));\n    return selected.slice(0, 3).map(option => option.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"ingredientsSauceListId\",\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Select, {\n          ...field,\n          options: sauceList && sauceList.map(sauce => ({\n            value: sauce.id,\n            label: sauce.name\n          })),\n          value: sauceOptions,\n          isMulti: true,\n          onChange: selected => {\n            field.onChange(handleChange(selected));\n          },\n          placeholder: \"Choose a sauce\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"ingredientsSauceListId\",\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Select, {\n          ...field,\n          options: extraList && extraList.map(sauce => ({\n            value: sauce.id,\n            label: sauce.name\n          })),\n          value: sauceOptions,\n          isMulti: true,\n          onChange: selected => {\n            field.onChange(handleChange(selected));\n          },\n          placeholder: \"Choose a sauce\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(PizzaForm, \"Ypwy3SlwT8FkZEFZwJJOi1JGQgs=\", false, function () {\n  return [useForm, useDispatch, useSelector];\n});\n_c = PizzaForm;\nexport default PizzaForm;\nvar _c;\n$RefreshReg$(_c, \"PizzaForm\");","map":{"version":3,"names":["useEffect","Select","useDispatch","useSelector","getSauce","getBasic","getExtra","Controller","useForm","useState","jsxDEV","_jsxDEV","PizzaForm","_s","register","handleSubmit","formState","errors","control","sauceOptions","setSauceOptions","dispatch","sauceDataState","extraDataState","basicDataState","state","ingredientReqest","sauceList","extraList","basicList","submit","data","console","log","handleChange","selected","slice","map","option","value","children","onSubmit","name","render","field","options","sauce","id","label","isMulti","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/Tel-ran.de/Desktop/pizza_project/pizza-project/src/Camponents/PizzaForms/PizzaForm.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSauce,getBasic,getExtra } from \"../../Redux/Features/AdminReqests/ingredientReqestsSlice\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useState } from \"react\";\r\n\r\nfunction PizzaForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm();\r\n  const [sauceOptions, setSauceOptions] = useState([]);\r\n  \r\n  const dispatch = useDispatch();\r\n  const {sauceDataState,extraDataState,basicDataState} = useSelector(\r\n    (state) => state.ingredientReqest);\r\n    const sauceList = sauceDataState;\r\n    const extraList = extraDataState;\r\n    const basicList = basicDataState;\r\n  useEffect(() => {\r\n    dispatch(getSauce());\r\n    dispatch(getBasic());\r\n    dispatch(getExtra());\r\n  }, []);\r\n  const submit = (data) => {\r\n    console.log(data);\r\n  };\r\n  const handleChange = (selected) => {\r\n    \r\n    setSauceOptions(selected.slice(0, 3));\r\n    return selected.slice(0, 3).map(option=>option.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(submit)}>\r\n        <Controller\r\n          control={control}\r\n          name=\"ingredientsSauceListId\"\r\n          render={({ field }) => (\r\n            <Select\r\n              {...field}\r\n              options={\r\n                sauceList &&\r\n                sauceList.map((sauce) => ({\r\n                  value: sauce.id,\r\n                  label: sauce.name,\r\n                }))\r\n              }\r\n              value={sauceOptions}\r\n              isMulti\r\n              onChange={(selected) => {\r\n                field.onChange(handleChange(selected));\r\n              }}\r\n              placeholder=\"Choose a sauce\"\r\n            />\r\n          )}\r\n        />\r\n                <Controller\r\n          control={control}\r\n          name=\"ingredientsSauceListId\"\r\n          render={({ field }) => (\r\n            <Select\r\n              {...field}\r\n              options={\r\n                extraList &&\r\n                extraList.map((sauce) => ({\r\n                  value: sauce.id,\r\n                  label: sauce.name,\r\n                }))\r\n              }\r\n              value={sauceOptions}\r\n              isMulti\r\n              onChange={(selected) => {\r\n                field.onChange(handleChange(selected));\r\n              }}\r\n              placeholder=\"Choose a sauce\"\r\n            />\r\n          )}\r\n        />\r\n\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default PizzaForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}