{"ast":null,"code":"import{useForm,Controller}from\"react-hook-form\";import{Select}from\"antd\";import{v4 as uuidv4}from\"uuid\";import{toppingFillingsArr,stylesArr}from\"../../utils\";import{useDispatch,useSelector}from\"react-redux\";import{getPizzaByTopping,getPizzaByStyles,getStandartPizza,getPizzaByToppingAndStyles}from\"../../Redux/Features/PizzaReqest/pizzaReqestSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function PizzaGetFilter(){const dispatch=useDispatch();const{handleSubmit,formState:{errors},control}=useForm();const{Option}=Select;const handleToppingChange=value=>{dispatch(getPizzaByTopping(value));};const handleStylesChange=value=>{dispatch(getPizzaByStyles(value));};const handleAllRecipes=()=>{dispatch(getStandartPizza());};const submit=data=>{dispatch(getPizzaByToppingAndStyles(data));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleAllRecipes,children:\"All standart recipes\"}),/*#__PURE__*/_jsx(Select,{defaultValue:\"Get by topping\",onSelect:handleToppingChange,children:toppingFillingsArr&&toppingFillingsArr.map(item=>/*#__PURE__*/_jsx(Option,{value:item.value,children:item.value},uuidv4()))}),/*#__PURE__*/_jsx(Select,{defaultValue:\"Get by Style\",onSelect:handleStylesChange,children:stylesArr&&stylesArr.map(item=>/*#__PURE__*/_jsx(Option,{value:item.value,children:item.value},uuidv4()))})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(submit),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"styles\",style:{color:'white'},children:\"Styles\"}),/*#__PURE__*/_jsx(Controller,{control:control,name:\"styles\",render:_ref=>{let{field}=_ref;return/*#__PURE__*/_jsxs(\"select\",{...field,onChange:e=>field.onChange(e.target.value),value:field.value,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose a style\"}),stylesArr&&stylesArr.map(item=>/*#__PURE__*/_jsx(\"option\",{value:item.value,children:item.value},item.id))]});}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"toppingsFillings\",style:{color:'white'},children:\"Toppings\"}),/*#__PURE__*/_jsx(Controller,{control:control,name:\"toppingsFillings\",render:_ref2=>{let{field}=_ref2;return/*#__PURE__*/_jsxs(\"select\",{...field,onChange:e=>field.onChange(e.target.value),value:field.value,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose a topping\"}),toppingFillingsArr&&toppingFillingsArr.map(item=>/*#__PURE__*/_jsx(\"option\",{value:item.value,children:item.value},item.id))]});}}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]})})]});}export default PizzaGetFilter;","map":{"version":3,"names":["useForm","Controller","Select","v4","uuidv4","toppingFillingsArr","stylesArr","useDispatch","useSelector","getPizzaByTopping","getPizzaByStyles","getStandartPizza","getPizzaByToppingAndStyles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PizzaGetFilter","dispatch","handleSubmit","formState","errors","control","Option","handleToppingChange","value","handleStylesChange","handleAllRecipes","submit","data","children","onClick","defaultValue","onSelect","map","item","onSubmit","htmlFor","style","color","name","render","_ref","field","onChange","e","target","required","id","_ref2","type"],"sources":["C:/Users/Tel-ran.de/Desktop/pizza_project/pizza-project/src/Camponents/PizzaForms/PizzaGetFilter.jsx"],"sourcesContent":["import { useForm, Controller } from \"react-hook-form\";\r\nimport { Select } from \"antd\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { toppingFillingsArr, stylesArr } from \"../../utils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getPizzaByTopping,\r\n  getPizzaByStyles,\r\n  getStandartPizza,\r\n  getPizzaByToppingAndStyles\r\n} from \"../../Redux/Features/PizzaReqest/pizzaReqestSlice\";\r\n\r\nfunction PizzaGetFilter() {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm();\r\n  const { Option } = Select;\r\n\r\n\r\n  const handleToppingChange = (value) => {\r\n    dispatch(getPizzaByTopping(value));\r\n  };\r\n  const handleStylesChange = (value) => {\r\n    dispatch(getPizzaByStyles(value));\r\n  };\r\n  const handleAllRecipes = () => {\r\n    dispatch(getStandartPizza());\r\n  };\r\n  const submit =(data)=>{\r\n    dispatch(getPizzaByToppingAndStyles(data))\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <div>\r\n        <button onClick={handleAllRecipes}>All standart recipes</button>\r\n        <Select defaultValue=\"Get by topping\" onSelect={handleToppingChange}>\r\n          {toppingFillingsArr &&\r\n            toppingFillingsArr.map((item) => (\r\n              <Option key={uuidv4()} value={item.value}>\r\n                {item.value}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n        <Select defaultValue=\"Get by Style\" onSelect={handleStylesChange}>\r\n          {stylesArr &&\r\n            stylesArr.map((item) => (\r\n              <Option key={uuidv4()} value={item.value}>\r\n                {item.value}\r\n              </Option>\r\n            ))}\r\n        </Select>\r\n      </div>\r\n      <div>\r\n        <form onSubmit={handleSubmit(submit)}>\r\n          <label htmlFor=\"styles\" style={{color:'white'}}>Styles</label>\r\n          <Controller\r\n            control={control}\r\n            name=\"styles\"\r\n            render={({ field }) => (\r\n              <select\r\n                {...field}\r\n                onChange={(e) => field.onChange(e.target.value)}\r\n                value={field.value}\r\n                required\r\n              >\r\n                <option value=\"\">Choose a style</option>\r\n                {stylesArr &&\r\n                  stylesArr.map((item) => (\r\n                    <option key={item.id} value={item.value}>\r\n                      {item.value}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          />\r\n          <label htmlFor=\"toppingsFillings\"style={{color:'white'}}>Toppings</label>\r\n          <Controller\r\n            control={control}\r\n            name=\"toppingsFillings\"\r\n            render={({ field }) => (\r\n              <select\r\n                {...field}\r\n                onChange={(e) => field.onChange(e.target.value)}\r\n                value={field.value}\r\n              >\r\n                <option value=\"\">Choose a topping</option>\r\n                {toppingFillingsArr &&\r\n                  toppingFillingsArr.map((item) => (\r\n                    <option key={item.id} value={item.value}>\r\n                      {item.value}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            )}\r\n          />\r\n          <input type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default PizzaGetFilter;\r\n"],"mappings":"AAAA,OAASA,OAAO,CAAEC,UAAU,KAAQ,iBAAiB,CACrD,OAASC,MAAM,KAAQ,MAAM,CAC7B,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CACnC,OAASC,kBAAkB,CAAEC,SAAS,KAAQ,aAAa,CAC3D,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OACEC,iBAAiB,CACjBC,gBAAgB,CAChBC,gBAAgB,CAChBC,0BAA0B,KACrB,mDAAmD,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE3D,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAAAC,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAC9B,KAAM,CACJc,YAAY,CACZC,SAAS,CAAE,CAAEC,MAAO,CAAC,CACrBC,OACF,CAAC,CAAGxB,OAAO,CAAC,CAAC,CACb,KAAM,CAAEyB,MAAO,CAAC,CAAGvB,MAAM,CAGzB,KAAM,CAAAwB,mBAAmB,CAAIC,KAAK,EAAK,CACrCP,QAAQ,CAACX,iBAAiB,CAACkB,KAAK,CAAC,CAAC,CACpC,CAAC,CACD,KAAM,CAAAC,kBAAkB,CAAID,KAAK,EAAK,CACpCP,QAAQ,CAACV,gBAAgB,CAACiB,KAAK,CAAC,CAAC,CACnC,CAAC,CACD,KAAM,CAAAE,gBAAgB,CAAGA,CAAA,GAAM,CAC7BT,QAAQ,CAACT,gBAAgB,CAAC,CAAC,CAAC,CAC9B,CAAC,CACD,KAAM,CAAAmB,MAAM,CAAGC,IAAI,EAAG,CACpBX,QAAQ,CAACR,0BAA0B,CAACmB,IAAI,CAAC,CAAC,CAC5C,CAAC,CACD,mBACEf,KAAA,CAAAE,SAAA,EAAAc,QAAA,eAEEhB,KAAA,QAAAgB,QAAA,eACElB,IAAA,WAAQmB,OAAO,CAAEJ,gBAAiB,CAAAG,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cAChElB,IAAA,CAACZ,MAAM,EAACgC,YAAY,CAAC,gBAAgB,CAACC,QAAQ,CAAET,mBAAoB,CAAAM,QAAA,CACjE3B,kBAAkB,EACjBA,kBAAkB,CAAC+B,GAAG,CAAEC,IAAI,eAC1BvB,IAAA,CAACW,MAAM,EAAgBE,KAAK,CAAEU,IAAI,CAACV,KAAM,CAAAK,QAAA,CACtCK,IAAI,CAACV,KAAK,EADAvB,MAAM,CAAC,CAEZ,CACT,CAAC,CACE,CAAC,cACTU,IAAA,CAACZ,MAAM,EAACgC,YAAY,CAAC,cAAc,CAACC,QAAQ,CAAEP,kBAAmB,CAAAI,QAAA,CAC9D1B,SAAS,EACRA,SAAS,CAAC8B,GAAG,CAAEC,IAAI,eACjBvB,IAAA,CAACW,MAAM,EAAgBE,KAAK,CAAEU,IAAI,CAACV,KAAM,CAAAK,QAAA,CACtCK,IAAI,CAACV,KAAK,EADAvB,MAAM,CAAC,CAEZ,CACT,CAAC,CACE,CAAC,EACN,CAAC,cACNU,IAAA,QAAAkB,QAAA,cACEhB,KAAA,SAAMsB,QAAQ,CAAEjB,YAAY,CAACS,MAAM,CAAE,CAAAE,QAAA,eACnClB,IAAA,UAAOyB,OAAO,CAAC,QAAQ,CAACC,KAAK,CAAE,CAACC,KAAK,CAAC,OAAO,CAAE,CAAAT,QAAA,CAAC,QAAM,CAAO,CAAC,cAC9DlB,IAAA,CAACb,UAAU,EACTuB,OAAO,CAAEA,OAAQ,CACjBkB,IAAI,CAAC,QAAQ,CACbC,MAAM,CAAEC,IAAA,MAAC,CAAEC,KAAM,CAAC,CAAAD,IAAA,oBAChB5B,KAAA,cACM6B,KAAK,CACTC,QAAQ,CAAGC,CAAC,EAAKF,KAAK,CAACC,QAAQ,CAACC,CAAC,CAACC,MAAM,CAACrB,KAAK,CAAE,CAChDA,KAAK,CAAEkB,KAAK,CAAClB,KAAM,CACnBsB,QAAQ,MAAAjB,QAAA,eAERlB,IAAA,WAAQa,KAAK,CAAC,EAAE,CAAAK,QAAA,CAAC,gBAAc,CAAQ,CAAC,CACvC1B,SAAS,EACRA,SAAS,CAAC8B,GAAG,CAAEC,IAAI,eACjBvB,IAAA,WAAsBa,KAAK,CAAEU,IAAI,CAACV,KAAM,CAAAK,QAAA,CACrCK,IAAI,CAACV,KAAK,EADAU,IAAI,CAACa,EAEV,CACT,CAAC,EACE,CAAC,EACT,CACH,CAAC,cACFpC,IAAA,UAAOyB,OAAO,CAAC,kBAAkB,CAAAC,KAAK,CAAE,CAACC,KAAK,CAAC,OAAO,CAAE,CAAAT,QAAA,CAAC,UAAQ,CAAO,CAAC,cACzElB,IAAA,CAACb,UAAU,EACTuB,OAAO,CAAEA,OAAQ,CACjBkB,IAAI,CAAC,kBAAkB,CACvBC,MAAM,CAAEQ,KAAA,MAAC,CAAEN,KAAM,CAAC,CAAAM,KAAA,oBAChBnC,KAAA,cACM6B,KAAK,CACTC,QAAQ,CAAGC,CAAC,EAAKF,KAAK,CAACC,QAAQ,CAACC,CAAC,CAACC,MAAM,CAACrB,KAAK,CAAE,CAChDA,KAAK,CAAEkB,KAAK,CAAClB,KAAM,CAAAK,QAAA,eAEnBlB,IAAA,WAAQa,KAAK,CAAC,EAAE,CAAAK,QAAA,CAAC,kBAAgB,CAAQ,CAAC,CACzC3B,kBAAkB,EACjBA,kBAAkB,CAAC+B,GAAG,CAAEC,IAAI,eAC1BvB,IAAA,WAAsBa,KAAK,CAAEU,IAAI,CAACV,KAAM,CAAAK,QAAA,CACrCK,IAAI,CAACV,KAAK,EADAU,IAAI,CAACa,EAEV,CACT,CAAC,EACE,CAAC,EACT,CACH,CAAC,cACFpC,IAAA,UAAOsC,IAAI,CAAC,QAAQ,CAAE,CAAC,EACnB,CAAC,CACJ,CAAC,EACN,CAAC,CAEP,CACA,cAAe,CAAAjC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}