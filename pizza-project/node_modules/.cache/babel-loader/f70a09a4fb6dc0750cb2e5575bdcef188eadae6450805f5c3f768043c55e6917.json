{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../utils\";\nexport const addPizza = createAsyncThunk(\"addPizza/addPizza\", async ({\n  id,\n  data\n}) => {\n  try {\n    const response = await axios.post(`${BASE_URL}/product/addPizza?userId=${id}`, data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const updatePizza = createAsyncThunk('updatePizza/updatePizza', async ({\n  id,\n  data\n}) => {\n  try {\n    const response = await axios.put(`${BASE_URL}/product/addPizza?userId=${id}`, data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const getStandartPizza = createAsyncThunk('getStandartPizza/getStandartPizza', async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/product/getAllPizzaStandardRecipe`);\n    return;\n  } catch (error) {\n    throw error;\n  }\n});\nconst pizzaReqestSlice = createSlice({\n  name: \"pizzaReqest\",\n  initialState: {\n    addPizzaDataState: null,\n    addpizzaLoadState: false,\n    addPizzaErrorState: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(addPizza.pending, state => {\n      state.addpizzaLoadState = true;\n      state.addPizzaErrorState = null;\n    }).addCase(addPizza.fulfilled, (state, action) => {\n      state.addPizzaDataState = action.payload;\n      state.addpizzaLoadState = false;\n      state.addPizzaErrorState = null;\n    }).addCase(addPizza.rejected, (state, action) => {\n      state.addpizzaLoadState = false;\n      state.addPizzaErrorState = action.payload;\n    });\n  }\n});\nexport default pizzaReqestSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","BASE_URL","addPizza","id","data","response","post","error","updatePizza","put","getStandartPizza","get","pizzaReqestSlice","name","initialState","addPizzaDataState","addpizzaLoadState","addPizzaErrorState","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/Tel-ran.de/Desktop/pizza_project/pizza-project/src/Redux/Features/PizzaReqest/pizzaReqestSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../utils\";\r\n\r\nexport const addPizza = createAsyncThunk(\r\n  \"addPizza/addPizza\",\r\n  async ({id, data}) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${BASE_URL}/product/addPizza?userId=${id}`,\r\n        data\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\nexport const updatePizza = createAsyncThunk(\r\n    'updatePizza/updatePizza',\r\n    async ({id, data}) => {\r\n        try {\r\n          const response = await axios.put(\r\n            `${BASE_URL}/product/addPizza?userId=${id}`,\r\n            data\r\n          );\r\n          return response.data;\r\n        } catch (error) {\r\n          throw error;\r\n        }\r\n      }\r\n)\r\nexport const getStandartPizza = createAsyncThunk(\r\n    'getStandartPizza/getStandartPizza',\r\n    async()=>{\r\n        try{\r\n            const response = await axios.get(`${BASE_URL}/product/getAllPizzaStandardRecipe`);\r\n            return\r\n        }\r\n        catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n)\r\nconst pizzaReqestSlice = createSlice({\r\n  name: \"pizzaReqest\",\r\n  initialState: {\r\n    addPizzaDataState: null,\r\n    addpizzaLoadState: false,\r\n    addPizzaErrorState: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(addPizza.pending, (state) => {\r\n        state.addpizzaLoadState = true;\r\n        state.addPizzaErrorState = null;\r\n      })\r\n      .addCase(addPizza.fulfilled, (state, action) => {\r\n        state.addPizzaDataState = action.payload;\r\n        state.addpizzaLoadState = false;\r\n        state.addPizzaErrorState = null;\r\n      })\r\n      .addCase(addPizza.rejected, (state, action) => {\r\n        state.addpizzaLoadState = false;\r\n        state.addPizzaErrorState = action.payload;\r\n      });\r\n  },\r\n});\r\nexport default pizzaReqestSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,OAAO,MAAMC,QAAQ,GAAGH,gBAAgB,CACtC,mBAAmB,EACnB,OAAO;EAACI,EAAE;EAAEC;AAAI,CAAC,KAAK;EACpB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC9B,GAAEL,QAAS,4BAA2BE,EAAG,EAAC,EAC3CC,IACF,CAAC;IACD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACF,CAAC;AACD,OAAO,MAAMC,WAAW,GAAGT,gBAAgB,CACvC,yBAAyB,EACzB,OAAO;EAACI,EAAE;EAAEC;AAAI,CAAC,KAAK;EAClB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACS,GAAG,CAC7B,GAAER,QAAS,4BAA2BE,EAAG,EAAC,EAC3CC,IACF,CAAC;IACD,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CACN,CAAC;AACD,OAAO,MAAMG,gBAAgB,GAAGX,gBAAgB,CAC5C,mCAAmC,EACnC,YAAS;EACL,IAAG;IACC,MAAMM,QAAQ,GAAG,MAAML,KAAK,CAACW,GAAG,CAAE,GAAEV,QAAS,oCAAmC,CAAC;IACjF;EACJ,CAAC,CACD,OAAMM,KAAK,EAAC;IACR,MAAMA,KAAK;EACf;AACJ,CACJ,CAAC;AACD,MAAMK,gBAAgB,GAAGd,WAAW,CAAC;EACnCe,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,iBAAiB,EAAE,IAAI;IACvBC,iBAAiB,EAAE,KAAK;IACxBC,kBAAkB,EAAE;EACtB,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACnB,QAAQ,CAACoB,OAAO,EAAGC,KAAK,IAAK;MACpCA,KAAK,CAACP,iBAAiB,GAAG,IAAI;MAC9BO,KAAK,CAACN,kBAAkB,GAAG,IAAI;IACjC,CAAC,CAAC,CACDI,OAAO,CAACnB,QAAQ,CAACsB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACR,iBAAiB,GAAGU,MAAM,CAACC,OAAO;MACxCH,KAAK,CAACP,iBAAiB,GAAG,KAAK;MAC/BO,KAAK,CAACN,kBAAkB,GAAG,IAAI;IACjC,CAAC,CAAC,CACDI,OAAO,CAACnB,QAAQ,CAACyB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACP,iBAAiB,GAAG,KAAK;MAC/BO,KAAK,CAACN,kBAAkB,GAAGQ,MAAM,CAACC,OAAO;IAC3C,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,eAAed,gBAAgB,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}