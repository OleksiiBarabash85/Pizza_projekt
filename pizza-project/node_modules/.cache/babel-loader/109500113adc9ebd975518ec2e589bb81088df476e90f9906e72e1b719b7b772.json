{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { BASE_URL, getTokenFromLocalStorage } from \"../../../utils\";\nexport const getOrdersByStatus = createAsyncThunk('GetOrdersByStatus/GetOrdersByStatus', async data => {\n  try {\n    const token = getTokenFromLocalStorage();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${BASE_URL}order/status?status=${data}`, config);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const getOrdersForPeriod = createAsyncThunk('getOrdersForPeriod/getOrdersForPeriod', async data => {\n  try {\n    const token = getTokenFromLocalStorage();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${BASE_URL}order/period?startDate=${data.startDate}&endDate=${data.endDate}`, config);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nexport const getOrdersDetails = createAsyncThunk('getOrdersDetails/getOrdersDetails', async id => {\n  try {\n    const token = getTokenFromLocalStorage();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    const response = await axios.get(`${BASE_URL}order/${id}`, config);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nconst orderReqestSlice = createSlice({\n  name: 'orderReqest',\n  initialState: {\n    orderDataState: null,\n    orderLoadState: false,\n    OrderErrorState: null,\n    or\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getOrdersByStatus.pending, state => {\n      state.orderLoadState = true;\n      state.OrderErrorState = null;\n    }).addCase(getOrdersByStatus.fulfilled, (state, action) => {\n      state.orderDataState = action.payload;\n      state.orderLoadState = false;\n      state.OrderErrorState = null;\n    }).addCase(getOrdersByStatus.rejected, (state, action) => {\n      state.orderLoadState = false;\n      state.OrderErrorState = action.payload;\n    }).addCase(getOrdersForPeriod.pending, state => {\n      state.orderLoadState = true;\n      state.OrderErrorState = null;\n    }).addCase(getOrdersForPeriod.fulfilled, (state, action) => {\n      state.orderDataState = action.payload;\n      state.orderLoadState = false;\n      state.OrderErrorState = null;\n    }).addCase(getOrdersForPeriod.rejected, (state, action) => {\n      state.orderLoadState = false;\n      state.OrderErrorState = action.payload;\n    });\n  }\n});\nexport default orderReqestSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","BASE_URL","getTokenFromLocalStorage","getOrdersByStatus","data","token","config","headers","Authorization","response","get","error","getOrdersForPeriod","startDate","endDate","getOrdersDetails","id","orderReqestSlice","name","initialState","orderDataState","orderLoadState","OrderErrorState","or","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/Tel-ran.de/Desktop/pizza_project/pizza-project/src/Redux/Features/OrderReqest/orderReqestSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL,getTokenFromLocalStorage} from \"../../../utils\";\r\n\r\n\r\nexport const getOrdersByStatus = createAsyncThunk(\r\n    'GetOrdersByStatus/GetOrdersByStatus',\r\n    async(data)=>{\r\n        try{\r\n            const token = getTokenFromLocalStorage();\r\n            const config = {\r\n              headers:{\r\n                Authorization:`Bearer ${token}`,\r\n              }\r\n            }   \r\n            const response = await axios.get(`${BASE_URL}order/status?status=${data}`,config)\r\n            return response.data\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n)\r\nexport const getOrdersForPeriod = createAsyncThunk(\r\n  'getOrdersForPeriod/getOrdersForPeriod',\r\n  async(data)=>{\r\n    try{\r\n      const token = getTokenFromLocalStorage();\r\n      const config = {\r\n        headers:{\r\n          Authorization:`Bearer ${token}`,\r\n        }\r\n      }\r\n      const response = await axios.get(`${BASE_URL}order/period?startDate=${data.startDate}&endDate=${data.endDate}`,config) \r\n      return response.data;  \r\n    }catch(error){\r\n      throw error;\r\n    }\r\n  }\r\n)\r\nexport const getOrdersDetails = createAsyncThunk(\r\n  'getOrdersDetails/getOrdersDetails',\r\n  async(id)=>{\r\n    try{\r\n      const token = getTokenFromLocalStorage();\r\n      const config = {\r\n        headers:{\r\n          Authorization:`Bearer ${token}`,\r\n        }\r\n      };\r\n      const response = await axios.get(`${BASE_URL}order/${id}`,config)\r\n      return response.data;\r\n    }catch(error){\r\n      throw error;\r\n    }\r\n  }\r\n)\r\n\r\nconst orderReqestSlice = createSlice({\r\n    name:'orderReqest',\r\n    initialState:{\r\n        orderDataState:null,\r\n        orderLoadState:false,\r\n        OrderErrorState:null,\r\n        or\r\n    },\r\n    reducers:{},\r\n    extraReducers:(builder)=>{\r\n        builder\r\n        .addCase(getOrdersByStatus.pending, (state) => {\r\n            state.orderLoadState = true;\r\n            state.OrderErrorState = null;\r\n          })\r\n          .addCase(getOrdersByStatus.fulfilled, (state, action) => {\r\n            state.orderDataState = action.payload;\r\n            state.orderLoadState = false;\r\n            state.OrderErrorState = null;\r\n          })\r\n          .addCase(getOrdersByStatus.rejected, (state, action) => {\r\n            state.orderLoadState = false;\r\n            state.OrderErrorState = action.payload;\r\n          })\r\n          .addCase(getOrdersForPeriod.pending, (state) => {\r\n            state.orderLoadState = true;\r\n            state.OrderErrorState = null;\r\n          })\r\n          .addCase(getOrdersForPeriod.fulfilled, (state, action) => {\r\n            state.orderDataState = action.payload;\r\n            state.orderLoadState = false;\r\n            state.OrderErrorState = null;\r\n          })\r\n          .addCase(getOrdersForPeriod.rejected, (state, action) => {\r\n            state.orderLoadState = false;\r\n            state.OrderErrorState = action.payload;\r\n          })\r\n    }\r\n})\r\n\r\nexport default orderReqestSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}