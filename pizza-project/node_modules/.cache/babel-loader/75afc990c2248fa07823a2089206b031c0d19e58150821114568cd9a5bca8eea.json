{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tel-ran.de\\\\Desktop\\\\pizza_project\\\\pizza-project\\\\src\\\\Camponents\\\\PizzaForms\\\\PizzaForm.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSauce } from \"../../Redux/Features/AdminReqests/ingredientReqestsSlice\";\nimport { Controller, useForm } from 'react-hook-form';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PizzaForm() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [sauceOptions, setSauceOptions] = useState([]);\n  const dispatch = useDispatch();\n  const sauceList = useSelector(state => state.ingredientReqest.sauceDataState);\n  useEffect(() => {\n    dispatch(getSauce());\n  }, []);\n  const handleChange = selected => {\n    if (selected.length <= 3) {\n      setSauceOptions(selected);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        control: control,\n        name: \"SA\",\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Select, {\n          ...field,\n          options: ingredientList,\n          value: selectedOptions,\n          isMulti: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n}\n_s(PizzaForm, \"mYa0UNB6yXP3aj07IM66ZZtsJPA=\", false, function () {\n  return [useForm, useDispatch, useSelector];\n});\n_c = PizzaForm;\nexport default PizzaForm;\nvar _c;\n$RefreshReg$(_c, \"PizzaForm\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","getSauce","Controller","useForm","useState","jsxDEV","_jsxDEV","PizzaForm","_s","register","handleSubmit","formState","errors","sauceOptions","setSauceOptions","dispatch","sauceList","state","ingredientReqest","sauceDataState","handleChange","selected","length","children","control","name","render","field","Select","options","ingredientList","value","selectedOptions","isMulti","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tel-ran.de/Desktop/pizza_project/pizza-project/src/Camponents/PizzaForms/PizzaForm.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { getSauce } from \"../../Redux/Features/AdminReqests/ingredientReqestsSlice\";\r\nimport {Controller, useForm} from 'react-hook-form';\r\nimport { useState } from \"react\";\r\n\r\n\r\nfunction PizzaForm(){\r\n    const{\r\n        register,\r\n        handleSubmit,\r\n        formState:{errors},\r\n    }= useForm();\r\n    const [sauceOptions,setSauceOptions] = useState([]);\r\n    const dispatch = useDispatch()\r\n    const sauceList = useSelector((state)=>state.ingredientReqest.sauceDataState);\r\n    useEffect(()=>{\r\n       dispatch(getSauce());\r\n       \r\n        \r\n    },[])\r\n    \r\n    const handleChange = (selected) => {\r\n       \r\n        if (selected.length <= 3) {\r\n         setSauceOptions(selected);\r\n        }\r\n      };\r\n\r\n    return(<div>\r\n        <form>\r\n        <Controller\r\n        control={control}\r\n        name=\"SA\"\r\n        render={({ field }) => (\r\n          <Select\r\n            {...field}\r\n            options={ingredientList} \r\n            value={selectedOptions}\r\n            isMulti\r\n            onChange={handleChange}\r\n          />\r\n        )}\r\n      />\r\n        </form>\r\n    </div>);\r\n}\r\nexport default PizzaForm;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,QAAQ,QAAQ,0DAA0D;AACnF,SAAQC,UAAU,EAAEC,OAAO,QAAO,iBAAiB;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,SAASA,CAAA,EAAE;EAAAC,EAAA;EAChB,MAAK;IACDC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAC;MAACC;IAAM;EACrB,CAAC,GAAET,OAAO,CAAC,CAAC;EACZ,MAAM,CAACU,YAAY,EAACC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACnD,MAAMW,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,SAAS,GAAGhB,WAAW,CAAEiB,KAAK,IAAGA,KAAK,CAACC,gBAAgB,CAACC,cAAc,CAAC;EAC7ErB,SAAS,CAAC,MAAI;IACXiB,QAAQ,CAACd,QAAQ,CAAC,CAAC,CAAC;EAGvB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMmB,YAAY,GAAIC,QAAQ,IAAK;IAE/B,IAAIA,QAAQ,CAACC,MAAM,IAAI,CAAC,EAAE;MACzBR,eAAe,CAACO,QAAQ,CAAC;IAC1B;EACF,CAAC;EAEH,oBAAOf,OAAA;IAAAiB,QAAA,eACHjB,OAAA;MAAAiB,QAAA,eACAjB,OAAA,CAACJ,UAAU;QACXsB,OAAO,EAAEA,OAAQ;QACjBC,IAAI,EAAC,IAAI;QACTC,MAAM,EAAEA,CAAC;UAAEC;QAAM,CAAC,kBAChBrB,OAAA,CAACsB,MAAM;UAAA,GACDD,KAAK;UACTE,OAAO,EAAEC,cAAe;UACxBC,KAAK,EAAEC,eAAgB;UACvBC,OAAO;UACPC,QAAQ,EAAEd;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AACV;AAAC9B,EAAA,CAvCQD,SAAS;EAAA,QAKXJ,OAAO,EAEOJ,WAAW,EACVC,WAAW;AAAA;AAAAuC,EAAA,GARxBhC,SAAS;AAwClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}